#include "esp_camera.h"
#include <WiFi.h>
#include <HTTPClient.h>
#include <WiFiClientSecure.h>

// ---------- WiFi ----------
const char* ssid     = "esptest";
const char* password = "123456789";

// ---------- Endpoint del Lambda ----------
const char* lambdaURL = "https://hxii8l17k1.execute-api.us-east-1.amazonaws.com/upload";  // cámbialo

// ---------- Pines AI-Thinker ----------
#define PWDN_GPIO_NUM     32
#define RESET_GPIO_NUM    -1
#define XCLK_GPIO_NUM      0
#define SIOD_GPIO_NUM     26
#define SIOC_GPIO_NUM     27
#define Y9_GPIO_NUM       35
#define Y8_GPIO_NUM       34
#define Y7_GPIO_NUM       39
#define Y6_GPIO_NUM       36
#define Y5_GPIO_NUM       21
#define Y4_GPIO_NUM       19
#define Y3_GPIO_NUM       18
#define Y2_GPIO_NUM        5
#define VSYNC_GPIO_NUM    25
#define HREF_GPIO_NUM     23
#define PCLK_GPIO_NUM     22

void setupCamera()
{
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer   = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk   = XCLK_GPIO_NUM;
  config.pin_pclk   = PCLK_GPIO_NUM;
  config.pin_vsync  = VSYNC_GPIO_NUM;
  config.pin_href   = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn  = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;
  config.frame_size   = FRAMESIZE_QVGA;
  config.jpeg_quality = 10;
  config.fb_count     = 1;

  if (esp_camera_init(&config) != ESP_OK) {
    Serial.println("❌ Error al iniciar la cámara");
    while (true) delay(1000);
  }
}

void connectWiFi()
{
  Serial.printf("Conectando a %s", ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.printf("\n✅ WiFi conectado, IP: %s\n", WiFi.localIP().toString().c_str());
}

void takeAndUploadPhoto()
{
  camera_fb_t* fb = esp_camera_fb_get();
  if (!fb) {
    Serial.println("❌ Error al capturar foto");
    return;
  }

  WiFiClientSecure client;
  client.setInsecure();          // omite validación TLS (para pruebas)
  HTTPClient http;

  if (http.begin(client, lambdaURL)) {
    http.addHeader("Content-Type", "image/jpeg");
    int status = http.POST(fb->buf, fb->len);

    Serial.printf("HTTP status: %d\n", status);
    if (status > 0) {
      Serial.println(http.getString());  // respuesta JSON del Lambda
    }
    http.end();
  } else {
    Serial.println("❌ No se pudo abrir la conexión HTTPS");
  }

  esp_camera_fb_return(fb);
}

void setup()
{
  Serial.begin(115200);
  connectWiFi();
  setupCamera();
  delay(2000);
  takeAndUploadPhoto();
}

void loop()
{
  delay(10000);      // 10 s
  takeAndUploadPhoto();
}
